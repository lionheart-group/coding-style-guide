"use strict";(self.webpackChunklionheart_coding_style_guide=self.webpackChunklionheart_coding_style_guide||[]).push([["1672"],{3522:function(e,t,n){n.r(t),n.d(t,{default:()=>c,frontMatter:()=>i,metadata:()=>r,assets:()=>a,toc:()=>l,contentTitle:()=>o});var r=JSON.parse('{"id":"wordpress/structure","title":"Template Structure","description":"","source":"@site/docs/wordpress/structure.mdx","sourceDirName":"wordpress","slug":"/wordpress/structure","permalink":"/coding-style-guide/docs/wordpress/structure","draft":false,"unlisted":false,"editUrl":"https://github.com/lionheart-group/coding-style-guide/edit/master/docs/wordpress/structure.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"wordpress","previous":{"title":"WordPress Coding Guide","permalink":"/coding-style-guide/docs/wordpress/"},"next":{"title":"Creating Page","permalink":"/coding-style-guide/docs/wordpress/howto/page"}}'),p=n("5893"),s=n("65");let i={sidebar_position:2},o="Template Structure",a={},l=[];function d(e){let t={code:"code",h1:"h1",header:"header",pre:"pre",...(0,s.a)(),...e.components};return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(t.header,{children:(0,p.jsx)(t.h1,{id:"template-structure",children:"Template Structure"})}),"\n",(0,p.jsx)(t.pre,{children:(0,p.jsx)(t.code,{className:"language-bash",children:"- Template/  # Template directory root\n  \u251C data/  # Assets files, Please check HTML coding rule\n  \u251C include/\n  \u2502   \u251C acf.php  # Advanced Custom Fields plugin extension\n  \u2502   \u251C admin.php  # Admin page extension\n  \u2502   \u251C cf7.php  # Contact Form 7 plugin extension\n  \u2502   \u251C functions.php  # Additional template method\n  \u2502   \u251C init.php  # Template initialize\n  \u2502   \u251C mw-wp-form.php  # MW WP Form plugin extension\n  \u2502   \u251C pagenavi.php  # WP-PageNavi plugin extension\n  \u2502   \u251C query.php  # pre_get_posts hook\n  \u2502   \u251C rewrite.php  # Arrange WordPress permalink setting\n  \u2502   \u251C scf.php  # Smart Custom Fields plugin extension\n  \u2502   \u2514 template.php  # WordPress template extension\n  \u251C templates/  # Re-usable template files\n  \u251C 404.php  # Not found page template\n  \u251C archive.php  # Basic post type archive page template\n  \u251C config.php  # Configuration file of the template\n  \u251C footer.php  # Footer template\n  \u251C functions.php  # Will include /include/ directory files\n  \u251C header.php  # Header template\n  \u251C home.php  # Top page template\n  \u251C page-sample.php  # Sample file for static page\n  \u251C page-sample__child.php  # Sample file for static page\n  \u251C page.php  # Sample file for static page (by updating Admin page)\n  \u251C single.php  # Basic post type detail page template\n  \u2514 style.css  # No need to update\n"})})]})}function c(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,p.jsx)(t,{...e,children:(0,p.jsx)(d,{...e})}):d(e)}},65:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return i}});var r=n(7294);let p={},s=r.createContext(p);function i(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(p):e.components||p:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);