"use strict";(self.webpackChunklionheart_coding_style_guide=self.webpackChunklionheart_coding_style_guide||[]).push([[1793],{2793:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var p=n(5893),s=n(1151);const r={sidebar_position:2},i="Template Structure",o={id:"wordpress/structure",title:"Template Structure",description:"",source:"@site/docs/wordpress/structure.mdx",sourceDirName:"wordpress",slug:"/wordpress/structure",permalink:"/coding-style-guide/docs/wordpress/structure",draft:!1,unlisted:!1,editUrl:"https://github.com/lionheart-group/coding-style-guide/edit/master/docs/wordpress/structure.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"wordpress",previous:{title:"WordPress Coding Guide",permalink:"/coding-style-guide/docs/wordpress/"},next:{title:"Creating Page",permalink:"/coding-style-guide/docs/wordpress/howto/page"}},a={},l=[];function c(e){const t={code:"code",h1:"h1",pre:"pre",...(0,s.a)(),...e.components};return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(t.h1,{id:"template-structure",children:"Template Structure"}),"\n",(0,p.jsx)(t.pre,{children:(0,p.jsx)(t.code,{className:"language-plaintext",children:"- Template/  # Template directory root\n  \u251c data/  # Assets files, Please check HTML coding rule\n  \u251c include/\n  \u2502   \u251c acf.php  # Advanced Custom Fields plugin extension\n  \u2502   \u251c admin.php  # Admin page extension\n  \u2502   \u251c cf7.php  # Contact Form 7 plugin extension\n  \u2502   \u251c functions.php  # Additional template method\n  \u2502   \u251c init.php  # Template initialize\n  \u2502   \u251c pagenavi.php  # WP-PageNavi plugin extension\n  \u2502   \u251c query.php  # pre_get_posts hook\n  \u2502   \u251c rewrite.php  # Arrange WordPress permalink setting\n  \u2502   \u251c scf.php  # Smart Custom Fields plugin extension\n  \u2502   \u2514 template.php  # WordPress template extension\n  \u251c templates/  # Re-usable template files\n  \u251c 404.php  # Not found page template\n  \u251c archive.php  # Basic post type archive page template\n  \u251c config.php  # Configuration file of the template\n  \u251c footer.php  # Footer template\n  \u251c functions.php  # Will include /include/ directory files\n  \u251c header.php  # Header template\n  \u251c home.php  # Top page template\n  \u251c page-sample.php  # Sample file for static page\n  \u251c page-sample__child.php  # Sample file for static page\n  \u251c page.php  # Sample file for static page (by updating Admin page)\n  \u251c single.php  # Basic post type detail page template\n  \u2514 style.css  # No need to update\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,p.jsx)(t,{...e,children:(0,p.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>i});var p=n(7294);const s={},r=p.createContext(s);function i(e){const t=p.useContext(r);return p.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),p.createElement(r.Provider,{value:t},e.children)}}}]);