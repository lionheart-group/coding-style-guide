"use strict";(self.webpackChunklionheart_coding_style_guide=self.webpackChunklionheart_coding_style_guide||[]).push([["1934"],{8362:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,default:()=>m,toc:()=>r,metadata:()=>o,assets:()=>l,contentTitle:()=>a});var o=JSON.parse('{"id":"html/methodologies/object/component","title":"Component","description":"Defines small scale modules as patterns for re-use.","source":"@site/docs/html/methodologies/object/component.mdx","sourceDirName":"html/methodologies/object","slug":"/html/methodologies/object/component","permalink":"/coding-style-guide/docs/html/methodologies/object/component","draft":false,"unlisted":false,"editUrl":"https://github.com/lionheart-group/coding-style-guide/edit/master/docs/html/methodologies/object/component.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"html","previous":{"title":"Layout","permalink":"/coding-style-guide/docs/html/methodologies/layout"},"next":{"title":"Project","permalink":"/coding-style-guide/docs/html/methodologies/object/project"}}'),s=t(5893),c=t(65);let i={sidebar_position:1},a="Component",l={},r=[{value:"In case of small Component",id:"in-case-of-small-component",level:2},{value:"In case of big Component",id:"in-case-of-big-component",level:2}];function d(e){let n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"component",children:"Component"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Defines small scale modules as patterns for re-use."}),"\n",(0,s.jsx)(n.p,{children:"This includes patterns commonly used such as button in the Bootstrap Component category."}),"\n",(0,s.jsx)(n.p,{children:"Modules defined in this layer should have minimal styling. For example, try to avoid defining a set width or color."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["FLOCSS recommends to separate by small units but we're allowing to make a big Component. Instead, ",(0,s.jsxs)(n.strong,{children:["you must put into ",(0,s.jsx)(n.code,{children:"Component"})," about the reuse layout of the website."]})]}),"\n",(0,s.jsxs)(n.p,{children:["You must use ",(0,s.jsx)(n.code,{children:".c-"})," prefix for Component."]}),"\n",(0,s.jsxs)(n.p,{children:["About modifire, you should use SMACSS State pattern (",(0,s.jsx)(n.code,{children:".is-"})," prefix)."]}),"\n",(0,s.jsxs)(n.admonition,{title:"TIPS",type:"tip",children:[(0,s.jsxs)(n.p,{children:["About modifier, please put like ",(0,s.jsx)(n.code,{children:"&.is-modifier"}),", because modifier is represent a different state of component."]}),(0,s.jsxs)(n.p,{children:["Reference : ",(0,s.jsx)(n.a,{href:"../important/modifier",children:"Don't use single class for Modifier"})]})]}),"\n",(0,s.jsx)(n.h2,{id:"in-case-of-small-component",children:"In case of small Component"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<button class="c-button">Button</button>\n<button class="c-button is-primary">Primary button</button>\n<button class="c-button is-secondary">Secondary button</button>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scss",metastring:'title="scss/object/component/_button.scss"',children:".c-button {\n    // something style\n\n    &.is-primary {\n        // something style\n    }\n    &.is-secondary {\n        // something style\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"in-case-of-big-component",children:"In case of big Component"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div class="c-contact-banner">\n    <h2 class="c-contact-banner__head">Contact</h2>\n    <div class="c-contact-banner__inner">\n        <div class="c-contact-banner__tel">\n            <p class="c-contact-banner__label">Phone</p>\n            <a class="tel:0000000000" class="c-contact-banner__tel__anchor u-anchor-tel">000-000-0000</a>\n        </div>\n        <div class="c-contact-banner__form">\n            <p class="c-contact-banner__label">Email</p>\n            <a href="/contact/" class="c-contact-banner__form__button c-button">Contact form</a>\n        </div>\n    </div>\n</div>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scss",metastring:'title="scss/object/component/_contact-banner.scss"',children:".c-contact-banner {\n    &__head {\n    }\n    &__inner {\n    }\n    &__label {\n    }\n    &__tel {\n        &__anchor {\n        }\n    }\n    &__form {\n        &__button {\n        }\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"TIPS",type:"tip",children:[(0,s.jsxs)(n.p,{children:["This example Component has Utility (",(0,s.jsx)(n.code,{children:".u-anchor-tel"}),") and another Component (",(0,s.jsx)(n.code,{children:".c-button"}),"), but you must NOT overwrite styles of those inside of ",(0,s.jsx)(n.code,{children:".c-contact-banner"})," Component. Please make Child Component (e.g. ",(0,s.jsx)(n.code,{children:".c-contact-banner__tel__anchor"})," and ",(0,s.jsx)(n.code,{children:".c-contact-banner__form__button"}),"), then you can define the style of those elements."]}),(0,s.jsxs)(n.p,{children:["Reference : ",(0,s.jsx)(n.a,{href:"/docs/html/methodologies/important/child",children:"Don't include other component"})]})]})]})}function m(e={}){let{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65:function(e,n,t){t.d(n,{Z:()=>a,a:()=>i});var o=t(7294);let s={},c=o.createContext(s);function i(e){let n=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);