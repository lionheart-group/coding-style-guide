"use strict";(self.webpackChunklionheart_coding_style_guide=self.webpackChunklionheart_coding_style_guide||[]).push([["1731"],{612:function(e,t,i){i.r(t),i.d(t,{frontMatter:()=>c,default:()=>h,toc:()=>d,metadata:()=>n,assets:()=>a,contentTitle:()=>r});var n=JSON.parse('{"id":"fegg/basic/others/index","title":"About Other methods","description":"Fegg has other methods that you may use in your application code and display.","source":"@site/docs/fegg/basic/others/index.mdx","sourceDirName":"fegg/basic/others","slug":"/fegg/basic/others/","permalink":"/coding-style-guide/docs/fegg/basic/others/","draft":false,"unlisted":false,"editUrl":"https://github.com/lionheart-group/coding-style-guide/edit/master/docs/fegg/basic/others/index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"fegg","previous":{"title":"Application::unsetCookie","permalink":"/coding-style-guide/docs/fegg/basic/parameters/cookie/unsetcookie"},"next":{"title":"Application::loadConfig","permalink":"/coding-style-guide/docs/fegg/basic/others/config/loadconfig"}}'),s=i(5893),o=i(65);let c={sidebar_position:1},r="About Other methods",a={},d=[{value:"Config",id:"config",level:2},{value:"Ticket",id:"ticket",level:2}];function l(e){let t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"about-other-methods",children:"About Other methods"})}),"\n",(0,s.jsx)(t.p,{children:"Fegg has other methods that you may use in your application code and display."}),"\n",(0,s.jsx)(t.h2,{id:"config",children:"Config"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/fegg/basic/others/config/loadconfig",children:"Application::loadConfig"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Loading config file"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"ticket",children:"Ticket"}),"\n",(0,s.jsxs)(t.p,{children:["Ticket is useful in securing your own form processing. Setting ticket will return a hashed random string using md5 function and is going to be a part of your session. This ticket can also be applied as ",(0,s.jsx)(t.a,{href:"/docs/fegg/basic/templates/rules/hidden",children:"Hidden"})," input on the form. That means this ticket exists both on the server and client side and we can match them once the form is submitted and validate if they are the same."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/fegg/basic/others/tickets/setticket",children:"Application::setTicket"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Set ticket data and start ticket session"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/docs/fegg/basic/others/tickets/useticket",children:"Application::useTicket"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Use ticket once and destroy ticket session"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65:function(e,t,i){i.d(t,{Z:()=>r,a:()=>c});var n=i(7294);let s={},o=n.createContext(s);function c(e){let t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);