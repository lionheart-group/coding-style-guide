"use strict";(self.webpackChunklionheart_coding_style_guide=self.webpackChunklionheart_coding_style_guide||[]).push([[8787],{3905:(a,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>m});var n=t(7294);function r(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function l(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function i(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function o(a,e){if(null==a)return{};var t,n,r=function(a,e){if(null==a)return{};var t,n,r={},l=Object.keys(a);for(n=0;n<l.length;n++)t=l[n],e.indexOf(t)>=0||(r[t]=a[t]);return r}(a,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(a);for(n=0;n<l.length;n++)t=l[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(r[t]=a[t])}return r}var d=n.createContext({}),s=function(a){var e=n.useContext(d),t=e;return a&&(t="function"==typeof a?a(e):i(i({},e),a)),t},u=function(a){var e=s(a.components);return n.createElement(d.Provider,{value:e},a.children)},p={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(a,e){var t=a.components,r=a.mdxType,l=a.originalType,d=a.parentName,u=o(a,["components","mdxType","originalType","parentName"]),c=s(t),m=r,g=c["".concat(d,".").concat(m)]||c[m]||p[m]||l;return t?n.createElement(g,i(i({ref:e},u),{},{components:t})):n.createElement(g,i({ref:e},u))}));function m(a,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof a||r){var l=t.length,i=new Array(l);i[0]=c;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=a,o.mdxType="string"==typeof a?a:r,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9973:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));const l={title:"Validation::katakana"},i=void 0,o={unversionedId:"fegg/library/validation/methods/katakana",id:"fegg/library/validation/methods/katakana",title:"Validation::katakana",description:"Check Katakana chracter for Japanese language",source:"@site/docs/05-fegg/04-library/01-validation/03-methods/17-katakana.mdx",sourceDirName:"05-fegg/04-library/01-validation/03-methods",slug:"/fegg/library/validation/methods/katakana",permalink:"/coding-style-guide/ja/docs/fegg/library/validation/methods/katakana",draft:!1,editUrl:"https://gitlab.com/lionheart-group/coding-style-guide/-/edit/master/docs/05-fegg/04-library/01-validation/03-methods/17-katakana.mdx",tags:[],version:"current",sidebarPosition:17,frontMatter:{title:"Validation::katakana"},sidebar:"fegg",previous:{title:"Validation::hankaku",permalink:"/coding-style-guide/ja/docs/fegg/library/validation/methods/hankaku"},next:{title:"Validation::setError",permalink:"/coding-style-guide/ja/docs/fegg/library/validation/methods/seterror"}},d={},s=[{value:"Description",id:"description",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Example",id:"example",level:2},{value:"Optional Flag",id:"optional-flag",level:3}],u={toc:s};function p(a){let{components:e,...t}=a;return(0,r.kt)("wrapper",(0,n.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Check Katakana chracter for Japanese language")),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"public boolean Validation::katakana( string $name, mixed $value, [ mixed $code = '', boolean $zenkakuFlag = false ] )\n")),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Data type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"$name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Item label")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"$value"),(0,r.kt)("td",{parentName:"tr",align:null},"mixed"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Check field value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"$code"),(0,r.kt)("td",{parentName:"tr",align:null},"mixed"),(0,r.kt)("td",{parentName:"tr",align:null},'""'),(0,r.kt)("td",{parentName:"tr",align:null},"Error code or Error message")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"$zenkakuFlag"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Required full-width Katakana only flag")))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Controller"',title:'"Controller"'},"$validation = $this->getClass('Validation');\n\n// If $value has only Japanese Katakana\n$successName = 'Success Field';\n$successVar  = '\u30c6\u30b9\u30c8';\n$validation->katakana('success', $successVar, array('@katakana', $successName));\n\nvar_dump($validation->isError()); // -> false\nvar_dump($validation->getErrorMessage()); // -> null\n\n// If $value has not only Japanese Katakana\n$failedName = 'Failed Field';\n$failedVar  = '\u3066\u3059\u3068';\n$validation->katakana('failed', $failedVar, array('@katakana', $failedName));\n\nvar_dump($validation->isError()); // -> true\nvar_dump($validation->getErrorMessage());\n// -> \"failed\" => \"<strong>Failed Field</strong> \u306f\u30ab\u30bf\u30ab\u30ca\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n")),(0,r.kt)("h3",{id:"optional-flag"},"Optional Flag"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Controller"',title:'"Controller"'},"// If $value has half-width Katakana with disabled $zenkakuFlag\n$successName = 'Success Field';\n$successVar  = '\uff83\uff7d\uff84';\n$validation->katakana('success', $successVar, array('@katakana', $successName));\n\nvar_dump($validation->isError()); // -> false\nvar_dump($validation->getErrorMessage()); // -> null\n\n// If $value has half-width Katakana with enabled $zenkakuFlag\n$failedName = 'Failed Field';\n$failedVar  = '\uff83\uff7d\uff84';\n$validation->katakana('failed', $failedVar, array('@katakana', $failedName), true);\n\nvar_dump($validation->isError()); // -> true\nvar_dump($validation->getErrorMessage());\n// -> \"failed\" => \"<strong>Failed Field</strong> \u306f\u30ab\u30bf\u30ab\u30ca\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n")))}p.isMDXComponent=!0}}]);