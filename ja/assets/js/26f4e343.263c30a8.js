"use strict";(self.webpackChunklionheart_coding_style_guide=self.webpackChunklionheart_coding_style_guide||[]).push([["4214"],{6344:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>o,metadata:()=>i,assets:()=>a,toc:()=>s,contentTitle:()=>l});var i=JSON.parse('{"id":"fegg/library/model/methods/havingopen","title":"Model::havingOpen","description":"Add open bracket on Having query","source":"@site/docs/fegg/library/model/methods/havingopen.mdx","sourceDirName":"fegg/library/model/methods","slug":"/fegg/library/model/methods/havingopen","permalink":"/coding-style-guide/ja/docs/fegg/library/model/methods/havingopen","draft":false,"unlisted":false,"editUrl":"https://github.com/lionheart-group/coding-style-guide/edit/master/docs/fegg/library/model/methods/havingopen.mdx","tags":[],"version":"current","sidebarPosition":18,"frontMatter":{"sidebar_position":18},"sidebar":"fegg","previous":{"title":"Model::having","permalink":"/coding-style-guide/ja/docs/fegg/library/model/methods/having"},"next":{"title":"Model::havingClose","permalink":"/coding-style-guide/ja/docs/fegg/library/model/methods/havingclose"}}'),r=t("5893"),d=t("65");let o={sidebar_position:18},l="Model::havingOpen",a={},s=[{value:"Description",id:"description",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Example",id:"example",level:2}];function c(e){let n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"modelhavingopen",children:"Model::havingOpen"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Add open bracket on Having query"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"public self Model::havingOpen( [ string $andOr = 'AND' ] )\n"})}),"\n",(0,r.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Data type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Remarks"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"$andOr"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"'AND'"}),(0,r.jsx)(n.td,{children:"Condition chain from the previous query AND or OR"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",metastring:'title="Controller"',children:"$model = new Model(false, array(\n  'table'   => 'cms_news',\n  'id'      => 'news_id',\n  'visible' => 'visible',\n));\n\n$model->having('news_id = ?', array(1));\n$model->havingOpen();\n$model->having('title = ?', array('foo'));\n$model->having('created_at <= ?', array('2021-01-01'), 'OR');\n$model->havingClose();\n\n// SELECT *\n// FROM cms_news\n// HAVING\n//   news_id = 1\n//   AND (\n//     title = 'foo'\n//     OR created_at <= '2021-01-01'\n//   )\n$records = $model->find();\n"})})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return o}});var i=t(7294);let r={},d=i.createContext(r);function o(e){let n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);